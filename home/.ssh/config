#################################################################################
### THIS FILE IS MANAGED BY https://go/manage-ssh (v0.0.78) DO NOT EDIT BY HAND
### YOU MAY ADD CUSTOM SETTINGS TO ~/.ssh/config.custom (see https://go/manage-ssh-customizations)
### DO NOT COPY/SCP THIS FILE TO ANOTHER HOST, IT IS UPDATED BY AUTOMATION AND UNIQUE TO xqli@xqli-mn2.linkedin.biz
#################################################################################

# Include any user specified SSH configuration
Include ~/.ssh/config.custom

# Include rdev configuration file. See https://go/remote-development
Include ~/.ssh/config.rdev

# This is disabled by default. We enable it so that once a key is unlocked it
#   will be added to the user's SSH agent so future SSH auth is password-less
AddKeysToAgent yes

# https://developer.apple.com/library/archive/technotes/tn2449/_index.html
# TL;DR This is a macOS specific directive, causes macOS to prompt for the SSH
#   key passphrase in the UI and store it in the system keychain for later use
UseKeychain yes

# Disable default set of keys (id_rsa, id_dsa, etc.). If you need them for an
#   external site (ex. github.com), this can be added through the ~/.ssh/config.custom
IdentityFile none


# SCM Hosts (SVN and Gerrit)
Host svn.corp.linkedin.com git.corp.linkedin.com git-failover.corp.linkedin.com git-staging.corp.linkedin.com git-staging-failover.corp.linkedin.com git-beta.corp.linkedin.com git-beta-failover.corp.linkedin.com lva1-sysops-svn.corp.linkedin.com lca1-sysops-svn.corp.linkedin.com sysops-svn.corp.linkedin.com sysops-gitlabs.corp.linkedin.com cfengine-git.corp.linkedin.com
    # Clear forwardings when connecting to SCM hosts to get rid off annoying warnings
    #   introduced by midgard's sudo socket forwarding
    #   add for all *.linkedin.com later down the config
    ClearAllForwardings yes

# TODO: There are a handful of services that are accessed directly from BIZ
#   (ex: svn/git). Eventually those services may also be behind the bastions,
#   but for now it breaks too many tools that are not expecting a password
#   prompt so we explicitly disable proxying SSH via a jump-host.
# This list was populated based on hosts provided in TOOLS-214303
Host git.corp.linkedin.com git-failover.corp.linkedin.com git-staging.corp.linkedin.com git-staging-failover.corp.linkedin.com git-beta.corp.linkedin.com git-beta-failover.corp.linkedin.com svn.corp.linkedin.com acctmgr.corp.linkedin.com lva1-auth00.corp.linkedin.com lca1-auth00.corp.linkedin.com sysops-gitlabs.corp.linkedin.com lva1-sysops-svn.corp.linkedin.com lca1-sysops-svn.corp.linkedin.com sysops-svn.corp.linkedin.com lva1-awsbssh01.linkedin.biz mom.corp.linkedin.com dad.corp.linkedin.com lca1-c1-infra05.corp.linkedin.com ltx1-c1-infra06.corp.linkedin.com cfengine-git.corp.linkedin.com
    ProxyCommand none
    # Use the system agent for git etc.
    IdentityAgent SSH_AUTH_SOCK
    # Enable public keys on those *linkedin.com systems which don't use bastions
    IdentityFile %d/.ssh/%u_at_linkedin.com_ssh_key

# Midgard enabled users should use another port for SSH on bastions,
#  which will not require 2FA prompt.
Host lca1-bssh03.corp.linkedin.com lca1-bssh04.corp.linkedin.com lva1-bssh03.corp.linkedin.com lva1-bssh04.corp.linkedin.com eng-portal.corp.linkedin.com
    Port 20022
    ProxyCommand /export/content/granular/bin/execwrap /export/content/granular/bin/ssh-ca-cli newconn -p -- /usr/bin/nc %h %p

# Connecting to SSH on most hosts at LinkedIn must be done via the SRE bastions
#   and/or eng-portal (referred to as "jump" hosts). These hosts require 2FA
#   which must be entered on every new authentication. Using ControlMaster
#   allows new SSH connections to share the existing authenticated session as
#   long as the TCP connection is still open, reducing the friction of 2FA.
Host *-bssh*.corp.linkedin.com *eng-portal*.corp.linkedin.com grid-portal.corp.linkedin.com lca1-netops01.corp.linkedin.com mom.corp.linkedin.com dad.corp.linkedin.com lca1-gns01.linkedin.biz nsg7-portalcn01.linkedin.biz lca1-c1-infra05.corp.linkedin.com ltx1-c1-infra06.corp.linkedin.com
    # Establish a control connection if one does not exist using a LI specific
    #   path so it can be found by automation.
    # Per HSec: ControlPersist must never be set to Yes or 0 (both infinite) or
    #   any value that is longer than 12 hours
    ControlMaster auto
    ControlPath ~/.ssh/master-LI-%r@%h:%p
    ControlPersist 12h
    # ServerAlive triggers a healthcheck every 30 seconds which will cleanup
    #   broken ControlMaster connections automatically when they fail
    ServerAliveInterval 30
    ServerAliveCountMax 3
    # Disable the ProxyCommand when trying to reach these hosts as they are all
    #   directly reachable from BIZ (which is why they require 2FA)
    ProxyCommand none
    # Allow the jump host to use the local SSH agent and keys
    # NOTE: This directive is extremely dangerous, please be careful
    ForwardAgent yes
    # Enable public keys on first-level bastions, so that they are loaded into agent before connecting further to stg/corp/prod
    IdentityFile %d/.ssh/%u_at_linkedin.com_ssh_key

# Access to out-of-band management (-con) is done via the SYSOPS bastions
Host *-con.*.linkedin.com
    # There is no bastion script to pick between mom/dad, just choose one
    ProxyJump mom.corp.linkedin.com

# Access to Azure is done via K2 bastions hosts located in E2
Host *.azure.linkedin.com
    # There is no bastion script to pick between LTX1 and LVA1, just chose one
    ProxyCommand /export/content/granular/bin/execwrap /export/content/granular/bin/ssh-ca-cli newconn -p -- ssh  -W %h:%p lva1-k2-bssh01.prod.linkedin.com
    # Midgard SUDO forwarding
    RemoteForward /tmp/xqli-sudo-sock /Users/xqli/.midgard/sudo.agent

# Access to NEO network devices is done via the NEO jump host
Host *.nw.linkedin.com
    # Most of NEO uses lca1-netops01, but other hosts are available
    ProxyJump lca1-netops01.corp.linkedin.com

# Access to China hosts must be done via nsg7 jumphost
Host abe2-*.gts.linkedin.com ash1-*.gts.linkedin.com *-cn-*.gts.linkedin.com *.internal.linkedin.cn
    ProxyJump nsg7-portalcn01.linkedin.biz

# Access to EPE network devices is done via the EPE/GNS jump host
Host *.gts.linkedin.com
    ProxyJump lca1-gns01.linkedin.biz

# https://iwww.corp.linkedin.com/wiki/cf/display/ENGS/GRID+SSH+Configuration+for+Mac+and+Linux+users
# Access to GRID hosts is done via grid-portal
Host *.grid.linkedin.com
    # GSSAPI forwards your BIZ Kerberos tickets to the GRID environments
    GSSAPIAuthentication yes
    GSSAPIDelegateCredentials yes
    # All GRID connections go through a grid specific jump host
    ProxyJump grid-portal.corp.linkedin.com

# Access to EdgeConnect PoPs can only be done via the E2 bastions
# https://iwww.corp.linkedin.com/wiki/cf/x/02WmD
Host vbe1-*.prod.linkedin.com vsh1-*.prod.linkedin.com ese2-*.prod.linkedin.com tch1-*.prod.linkedin.com tnd1-*.prod.linkedin.com ety2-*.prod.linkedin.com
    # There is no bastion script to pick between LTX1 and LVA1, just pick one
    ProxyCommand /export/content/granular/bin/execwrap /export/content/granular/bin/ssh-ca-cli newconn -p -- ssh  -W %h:%p lva1-e2-bssh01.prod.linkedin.com
    # Midgard SUDO forwarding
    RemoteForward /tmp/xqli-sudo-sock /Users/xqli/.midgard/sudo.agent

# These specific hosts are used as "shell" hosts where engineers run commands
#   instead of just using transparent SSH tunneling. As such they need access
#   to the local system's SSH keys to authenticate with on-ward hosts
# This is the block where you can add any additional servers you use as shell
#   hosts specific to your team (ex: espresso shell hosts)
# TODO: The EI admin hosts don't have a fuzzy-matchable hostname
Host *-shell*.prod.linkedin.com *-shell*.corp.linkedin.com *-admin*.prod.linkedin.com *-admin*.corp.linkedin.com *-e2-bssh*.prod.linkedin.com *-k2-bssh*.prod.linkedin.com
    # Allow the remote host to use the local SSH agent and keys
    # NOTE: This directive is extremely dangerous, please be careful
    ForwardAgent yes
    # Load the key on connections to shell and admin hosts as they are not updated yet
    IdentityFile %d/.ssh/%u_at_linkedin.com_ssh_key

# For access to all known LinkedIn subdomains use the default SSH jump-host
Host *.prod.linkedin.com *.prime.linkedin.com *.fin.linkedin.com *.stg.linkedin.com *.int.linkedin.com *.corp.linkedin.com
    ProxyCommand /export/content/granular/bin/execwrap /export/content/granular/bin/ssh-ca-cli newconn -p -- ssh -o 'ProxyCommand none' -W %h:%p eng-portal.corp.linkedin.com
    # Midgard SUDO forwarding
    RemoteForward /tmp/xqli-sudo-sock /Users/xqli/.midgard/sudo.agent

# If the host is in biz and the hostname starts with the current user's
#   username then they are trying to reach their own workstation, add the agent
Host xqli-*.linkedin.biz
    # SSH Agent is explicitly forwarded when connecting to other machines
    #   owned by the current user so commands like "mint checkout" work
    # NOTE: This directive is extremely dangerous, please be careful
    ForwardAgent yes

# For all hosts at LinkedIn we need to make a few changes from the defaults
Host *.linkedin.com *.linkedin.biz
    # This defaults to 1 attempt which will cause connections to fail when
    #   connecting to IPv6-enabled hosts. By setting it to 2 SSH will fall back
    #   to IPv4 if the IPv6 connection fails (common on Linux workstations).
    ConnectionAttempts 2
    # Time spent within a ProxyCommand is counted against this connection
    #   timeout which becomes an issue when blocking on user input (2FA). We
    #   must compensate for that however we also still want a timeout to occur
    #   so that SSH tries IPv4.
    # TODO: Find a better solution to this issue, ideally setting it to a lower
    #   value when a ControlMaster socket already exists (maybe "Match exec"?)
    ConnectTimeout 45
    # Automatically add newly seen host keys to the known_hosts
    StrictHostKeyChecking accept-new
    

# There is a "real" host at localhost.prod.linkedin.com which will take precedence
# when a user types "ssh localhost" instead of the real loopback interface. This
# behavior breaks a number of build tools which expect to use this to reach the
# local build machine
Host localhost localhost.localdomain
    # Disabling canonicalization will cause the connection to use loopback
    CanonicalizeHostname no

# Anything under this directive applies to all hosts, please be careful what
#   directives are put under here as they will also impact connections made
#   to external hostnames (ex: Do NOT add ForwardAgent in this block)
Host * !*.linkedin.com
    # SSH keys at LinkedIn are placed in a standized path under .ssh, we want
    #   to ensure this is available for all connections.
    # Ideally this key would only be loaded for connections to LinkedIn hosts
    #   however it is common to also use on external hosts like GitHub and AWS
    #   so it is loaded everywhere
    IdentityFile %d/.ssh/%u_at_linkedin.com_ssh_key

# https://iwww.corp.linkedin.com/wiki/cf/display/TOOLS/tester+SSH+Keys+Distribution
# TODO: Remove this when MPPCX-2831 is complete
Match User tester
    IdentityFile %d/.ssh/tester_at_linkedin.com_rsa_key

Host *.linkedin.com *.linkedin.cn !*.internal.linkedin.cn !*.gts.linkedin.com
    # Enable midgard agent by default
    IdentityAgent %d/.midgard/ssh.agent
